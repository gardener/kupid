#!/usr/bin/env bash

# SPDX-FileCopyrightText: 2024 SAP SE or an SAP affiliate company and Gardener contributors
#
# SPDX-License-Identifier: Apache-2.0

set -e

export GO111MODULE=on
# to mute ginkgo deprecation warnings
export ACK_GINKGO_DEPRECATIONS=2.0.0

# For the test step concourse will set the following environment variables:
# SOURCE_PATH - path to component repository root directory.

if [[ $(uname) == 'Darwin' ]]; then
  READLINK_BIN="greadlink"
else
  READLINK_BIN="readlink"
fi

if [[ -z "${SOURCE_PATH}" ]]; then
  export SOURCE_PATH="$(${READLINK_BIN} -f $(dirname ${0})/..)"
else
  export SOURCE_PATH="$(${READLINK_BIN} -f "${SOURCE_PATH}")"
fi

cd "${SOURCE_PATH}"

# Install Ginkgo (test framework) to be able to execute the tests.
echo "Building Ginkgo framework"
go install -mod=vendor ./vendor/github.com/onsi/ginkgo/ginkgo

echo "Successfully built Ginkgo frawework"

##############################################################################

function test_with_coverage() {
  local output_dir=test/output
  local coverprofile_file=coverprofile.out
  mkdir -p test/output
  ginkgo $GINKGO_COMMON_FLAGS --coverprofile ${coverprofile_file} -covermode=set -outputdir ${output_dir} ${TEST_PACKAGES}
  TEST_RESULT=$?

  sed -i -e '/mode: set/d' ${output_dir}/${coverprofile_file}
  {( echo "mode: set"; cat ${output_dir}/${coverprofile_file} )} > ${output_dir}/${coverprofile_file}.temp
  mv ${output_dir}/${coverprofile_file}.temp ${output_dir}/${coverprofile_file}
  GOFLAGS="-mod=vendor" go tool cover -func ${output_dir}/${coverprofile_file}
  return ${TEST_RESULT}
}

###############################################################################

echo ">>>>> Invoking unit tests"
TEST_PACKAGES="pkg"
GINKGO_COMMON_FLAGS="-r -timeout=1h0m0s --randomizeAllSpecs --randomizeSuites --failOnPending  --progress -mod=vendor"
test_with_coverage
TEST_RESULT=$?
echo ">>>>> Finished executing unit tests"

exit ${TEST_RESULT}
